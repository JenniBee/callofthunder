//Object interaction
function ringObject_verb(var objA, var objB)
{
	action
	{
		case verbPickUp:
			Actor_pickup(demoRingInvObject);
			Object_setState(objA, OBJECT_STATE_DISABLED);
			break;
		case verbLookAt:
			Actor_talkEgo("Hmm, that's probably a ring.");
			Script_waitForMessage();
			asm { pushWordVar .word objA setObjectName .string "ring?" }
			break;
	}
}
function entranceObject_verb(var objA, var objB)
{
	action
	{
		case verbUse:
			Actor_talkEgo("No go. That's way to high to climb.");
			break;
		case verbTalkTo:
			Actor_talkEgo("In the final demo, we will start a dialog.");
			break;
	}
}
function iceObject_verb(var objA, var objB)
{
	action
	{
		case verbLookAt:
			Actor_talkEgo("Let's change room!!!!");
			Room_load(iceCaveMechanismRoom);
			break;
	}
}
function wallObject_verb(var objA, var objB)
{
	action
	{
		case verbLookAt:
			//Actor_animate(actorIndy, );
			Actor_talkEgo("It feels somehow loose.");
			break;
	}
}


function setupIndy()
{
	// Setup actor, costume, and animations
	Actor_setCurrent(actorIndy);
	asm { actorOps actorName .string "Indy" }
	Actor_setCostume(indyCostume);
	Actor_setInitAnim(indyCostume_stand);
	Actor_setStandAnim(indyCostume_stand);
	Actor_setWalkAnim(indyCostume_walk);
	Actor_setTalkAnim(indyCostume_talk, indyCostume_stand);
	Actor_setStepDistance(7, 4);
	Actor_setAnimSpeed(1);
	Actor_setWidth(0);
	Actor_ignoreBoxes(1);
	Actor_setScale(0xFF);
	VAR_EGO = actorIndy;
}

function setupCharset()
{
	Interface_setCharset(font2);
	Actor_printLoadDefault(VAR_EGO);
	Actor_setTalkColor(COLOR_WHITE);
	Actor_printCenter();
	Actor_printOverhead();
	Actor_printSaveDefault();
}


// Just for debbuging
thread mousePos()
{
   Interface_printTextLoadDefault();
   while (1)
   {
      Util_redraw();
      Script_break();
      Interface_printTextAt(220, 5);
      Interface_printText("X: %i{VAR_MOUSE_X}");
      Interface_printTextAt(220, 15);
      Interface_printText("Y: %i{VAR_MOUSE_Y}");
      Script_break();
   }
}

thread changeIntensity()
{
	const MIN_INTENSITY = 10;
    const MAX_INTENSITY = 45;
	const DELAY = 6;
    var i;

	// Gradually makes the room and its objects brighter
    for (i = MIN_INTENSITY; i < MAX_INTENSITY; i++)
    {
		Room_setIntensity(i, darkArea_start, darkArea_end);
		Room_setIntensity(i, indyCostumeArea_start, indyCostumeArea_end);
		Room_setIntensity(i, ringObjectArea_start, ringObjectArea_end);
        Script_delayFrames(DELAY);
    }
}

function entry()
{
	const VERB_TOUCH_X = 57;
	const VERB_TOUCH_Y = 187;
	var t;
	changeIntensity();
	
	//Set up game
	setupIndy();
	setupCharset();
	Room_createBoxMatrix();
	Actor_ignoreBoxes(0);

	//Object_setClass(ringObject, classOpenable, 1);
	Object_setClass(entranceObject, classPerson, 1);
	
	//Change verb 'look at' to 'touch'
	Verb_setCurrent(verbLookAt);
	Verb_setNameString("Touch");
	Verb_setPos(VERB_TOUCH_X, VERB_TOUCH_Y);
	
	//Position Actor
	Actor_putAtXY(actorIndy, 96, 48, VAR_ROOM);
	Actor_setDirection(ACTOR_DIR_SOUTH);
	//Give starting items
	Actor_pickup(whipInvObject);
	Actor_pickup(demoMatchesInvObject);
	
	mousePos(); //Show mouse coordinates
	
	//TODO: Fall down and stand up animation  *OUCH*
	//Actor from surface: "Everything alright Indy?"
	Actor_talkEgo("It's ok.");
	Script_waitForMessage();
	//Small dialog -> torch falls down
	
	Inventory_enable();
	Input_enable();	
}

function exit()
{
}
