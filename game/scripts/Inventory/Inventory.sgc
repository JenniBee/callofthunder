// Global constants
const INVENTORY_Y = 144;
const N_INV_SLOTS = 10;
const N_INV_LINES = 2;
const N_INV_COLUMNS = 5;

// Verb positions
const VERB_VERBS_X = 0;
const VERB_VERBS_Y = 152;
const VERB_GIVE_X = 15;
const VERB_GIVE_Y = 159;
const VERB_PICK_UP_X = 54;
const VERB_PICK_UP_Y = 159;
const VERB_USE_X = 108;
const VERB_USE_Y = 159;
const VERB_OPEN_X = 14;
const VERB_OPEN_Y = 173;
const VERB_TALK_TO_X = 53;
const VERB_TALK_TO_Y = 173;
const VERB_PUSH_X = 106;
const VERB_PUSH_Y = 173;
const VERB_CLOSE_X = 12;
const VERB_CLOSE_Y = 187;
const VERB_LOOK_AT_X = 53;
const VERB_LOOK_AT_Y = 187;
const VERB_TOUCH_X = 57;
const VERB_TOUCH_Y = 187;
const VERB_PULL_X = 108;
const VERB_PULL_Y = 187;
const VERB_ARROW_UP_X = 147;
const VERB_ARROW_UP_Y = 158;
const VERB_ARROW_DOWN_X = 147;
const VERB_ARROW_DOWN_Y = 180;
const VERB_INV_SLOT1_X = 160;
const VERB_INV_SLOT1_Y = 152;
const VERB_INV_SLOT2_X = 192;
const VERB_INV_SLOT2_Y = 152;
const VERB_INV_SLOT3_X = 224;
const VERB_INV_SLOT3_Y = 152;
const VERB_INV_SLOT4_X = 256;
const VERB_INV_SLOT4_Y = 152;
const VERB_INV_SLOT5_X = 288;
const VERB_INV_SLOT5_Y = 152;
const VERB_INV_SLOT6_X = 160;
const VERB_INV_SLOT6_Y = 176;
const VERB_INV_SLOT7_X = 192;
const VERB_INV_SLOT7_Y = 176;
const VERB_INV_SLOT8_X = 224;
const VERB_INV_SLOT8_Y = 176;
const VERB_INV_SLOT9_X = 256;
const VERB_INV_SLOT9_Y = 176;
const VERB_INV_SLOT10_X = 288;
const VERB_INV_SLOT10_Y = 176;

// Verbs
verb verbVerbs;
verb verbArrowUp;
verb verbArrowDown;
verb verbInvSlot1;
verb verbInvSlot2;
verb verbInvSlot3;
verb verbInvSlot4;
verb verbInvSlot5;
verb verbInvSlot6;
verb verbInvSlot7;
verb verbInvSlot8;
verb verbInvSlot9;
verb verbInvSlot10;

// Global variables
var _inventoryEnabled;
var _inventoryVisible;
var _lineOffset;
var _currentActor;

// Private functions
function _Inventory_addSlot(var vrb, var posX, var posY)
{
	// Add inventory slot verb
	Verb_setCurrent(vrb);
	Verb_new();
	Verb_setPos(posX, posY);
}

inline function _Inventory_addVerb(var vrb, var string, var posX, var posY)
{
	// Add verb
	Verb_setCurrent(vrb);
	Verb_new();
	Verb_setNameString(string);
	Verb_setColor(areaNormal_start);
	Verb_setBackColor(areaBack_start);
	Verb_setDimColor(areaDim_start);
	Verb_setHiColor(areaHi_start);
	Verb_setPos(posX, posY);
}

function _Inventory_click()
{
	// Check arrows and change the inventory offset accordingly
	if (inputCmd == verbArrowUp)
		_lineOffset--;
	else if (inputCmd == verbArrowDown)
		_lineOffset++;
	else
		return;

	// Redraw inventory
	Inventory_show();
}

inline function _Inventory_drawArrows()
{
	// Handle up arrow
	Verb_setCurrent(verbArrowUp);
	if (_lineOffset > 0)
		Verb_activate(1);
	else
		Verb_dim();
	Verb_draw();

	// Handle down arrow
	Verb_setCurrent(verbArrowDown);
	if (Actor_getInventoryCount(_currentActor) > (_lineOffset + N_INV_LINES) * N_INV_COLUMNS)
		Verb_activate(1);
	else
		Verb_dim();
	Verb_draw();
}

inline function _Inventory_drawSlots()
{
	var i;
	var obj;

	for (i = 0; i < N_INV_SLOTS; i++)
	{
		// Find inventory object
		obj = Actor_findInventory(_currentActor, (_lineOffset * N_INV_COLUMNS) + i + 1);

		// Set current verb slot
		Verb_setCurrent(verbInvSlot1 + i);

		// Set slot image if an inventory object has been found
		if (obj != 0)
			Verb_setImage(obj);

		// Show the slot if an inventory object has been found, otherwise hide it
		Verb_activate(obj != 0);
		Verb_draw();
	}
}

function _Inventory_handler()
{
	// Reset line offset if the current actor has changed
	if (VAR_EGO != _currentActor)
	{
		_lineOffset = 0;
		_currentActor = VAR_EGO;
	}

	// Redraw inventory as we just picked up an item (only if the inventory is visible already)
	if (_inventoryVisible)
		Inventory_show();
}

inline function _Inventory_hideSlots()
{
	var i;
	for (i = 0; i < N_INV_SLOTS; i++)
	{
		Verb_setCurrent(verbInvSlot1 + i);
		Verb_activate(0);
		Verb_draw();
	}
}

// Public functions
inline function Inventory_disable()
{
	// Enable sentence
	Sentence_disable();

	// Inventory is now disabled
	_inventoryEnabled = 0;
}

inline function Inventory_enable()
{
	// Enable sentence
	Sentence_enable();

	// Inventory is now enabled
	_inventoryEnabled = 1;
}

inline function Inventory_getObject(var x, var y)
{
	var vrb;

	// If inventory is disabled, return
	if (!_inventoryEnabled)
		return 0;

	// Get verb from position
	vrb = Verb_getFromXY(x, y);

	// If the verb is not an inventory object, we consider no verb has been found
	if ((vrb < verbInvSlot1) || (vrb > verbInvSlot10))
		return 0;

	// Return object
	return Actor_findInventory(_currentActor, vrb - verbInvSlot1 + (_lineOffset * N_INV_COLUMNS) + 1);
}

inline function Inventory_hide()
{
	// Hide verbs
	Verb_setCurrent(verbGive);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbPickUp);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbUse);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbOpen);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbTalkTo);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbPush);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbClose);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbLookAt);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbPull);
	Verb_activate(0);
	Verb_draw();
	
	// Hide arrows
	Verb_setCurrent(verbArrowUp);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbArrowDown);
	Verb_activate(0);
	Verb_draw();

	// Hide slots
	_Inventory_hideSlots();

	// Hide verbs background
	Verb_setCurrent(verbVerbs);
	Verb_activate(0);
	Verb_draw();

	// Hide sentence
	Sentence_hide();

	// Set inventory visibility
	_inventoryVisible = 0;
}

function Inventory_init()
{
	// Initialize charset
	Interface_setCharset(font1);
	Interface_printTextLoadDefault();
	Interface_printTextLeft();
	Interface_printTextSaveDefault();

	// Add verbs background
	Verb_setCurrent(verbVerbs);
	Verb_new();
	Verb_setImage(verbsObject);
	Verb_setPos(VERB_VERBS_X, VERB_VERBS_Y);

	// Add verbs
	_Inventory_addVerb(verbGive, "Give", VERB_GIVE_X, VERB_GIVE_Y);
	_Inventory_addVerb(verbPickUp, "Pick up", VERB_PICK_UP_X, VERB_PICK_UP_Y);
	_Inventory_addVerb(verbUse, "Use", VERB_USE_X, VERB_USE_Y);
	_Inventory_addVerb(verbOpen, "Open", VERB_OPEN_X, VERB_OPEN_Y);
	_Inventory_addVerb(verbTalkTo, "Talk to", VERB_TALK_TO_X, VERB_TALK_TO_Y);
	_Inventory_addVerb(verbPush, "Push", VERB_PUSH_X, VERB_PUSH_Y);
	_Inventory_addVerb(verbClose, "Close", VERB_CLOSE_X, VERB_CLOSE_Y);
	_Inventory_addVerb(verbLookAt, "Look at", VERB_LOOK_AT_X, VERB_LOOK_AT_Y);
	_Inventory_addVerb(verbPull, "Pull", VERB_PULL_X, VERB_PULL_Y);

	// Add arrows
	_Inventory_addVerb(verbArrowUp, "\x01", VERB_ARROW_UP_X, VERB_ARROW_UP_Y);
	_Inventory_addVerb(verbArrowDown, "\x02", VERB_ARROW_DOWN_X, VERB_ARROW_DOWN_Y);

	// Add inventory slots
	_Inventory_addSlot(verbInvSlot1, VERB_INV_SLOT1_X, VERB_INV_SLOT1_Y);
	_Inventory_addSlot(verbInvSlot2, VERB_INV_SLOT2_X, VERB_INV_SLOT2_Y);
	_Inventory_addSlot(verbInvSlot3, VERB_INV_SLOT3_X, VERB_INV_SLOT3_Y);
	_Inventory_addSlot(verbInvSlot4, VERB_INV_SLOT4_X, VERB_INV_SLOT4_Y);
	_Inventory_addSlot(verbInvSlot5, VERB_INV_SLOT5_X, VERB_INV_SLOT5_Y);
	_Inventory_addSlot(verbInvSlot6, VERB_INV_SLOT6_X, VERB_INV_SLOT6_Y);
	_Inventory_addSlot(verbInvSlot7, VERB_INV_SLOT7_X, VERB_INV_SLOT7_Y);
	_Inventory_addSlot(verbInvSlot8, VERB_INV_SLOT8_X, VERB_INV_SLOT8_Y);
	_Inventory_addSlot(verbInvSlot9, VERB_INV_SLOT9_X, VERB_INV_SLOT9_Y);
	_Inventory_addSlot(verbInvSlot10, VERB_INV_SLOT10_X, VERB_INV_SLOT10_Y);

	// Set current actor and offset
	_currentActor = VAR_EGO;
	_lineOffset = 0;

	// Inventory is disabled and hidden by default
	_inventoryEnabled = 0;
	_inventoryVisible = 0;

	// Tell SCUMM engine which script will be our inventory handler
	VAR_INVENTORY_SCRIPT = _Inventory_handler;

	// Register our click handler
	Input_registerClickHandler(_Inventory_click);
}

inline function Inventory_setTouchVerb(var on)
{
	Verb_setCurrent(verbLookAt);
	if (on)
	{
		
		Verb_setNameString("Touch");
		Verb_setPos(VERB_TOUCH_X, VERB_TOUCH_Y);
	}
	else
	{
		Verb_setNameString("Look at");
		Verb_setPos(VERB_LOOK_AT_X, VERB_LOOK_AT_Y);
	}
}

inline function Inventory_show()
{
	// Hide slots first
	_Inventory_hideSlots();

	// Draw verbs background
	Verb_setCurrent(verbVerbs);
	Verb_activate(1);
	Verb_draw();

	// Draw verbs
	Verb_setCurrent(verbGive);
	Verb_activate(1);
	Verb_draw();
	Verb_setCurrent(verbPickUp);
	Verb_activate(1);
	Verb_draw();
	Verb_setCurrent(verbUse);
	Verb_activate(1);
	Verb_draw();
	Verb_setCurrent(verbOpen);
	Verb_activate(1);
	Verb_draw();
	Verb_setCurrent(verbTalkTo);
	Verb_activate(1);
	Verb_draw();
	Verb_setCurrent(verbPush);
	Verb_activate(1);
	Verb_draw();
	Verb_setCurrent(verbClose);
	Verb_activate(1);
	Verb_draw();
	Verb_setCurrent(verbLookAt);
	Verb_activate(1);
	Verb_draw();
	Verb_setCurrent(verbPull);
	Verb_activate(1);
	Verb_draw();
	
	// Draw arrows
	_Inventory_drawArrows();

	// Draw slots
	_Inventory_drawSlots();

	// Draw sentence
	Sentence_show();

	// Set inventory visibility
	_inventoryVisible = 1;
}
