// Object classes
const OBJECT_CLASS_NEVER_CLIP = 20;
const OBJECT_CLASS_ALWAYS_CLIP = 21;
const OBJECT_CLASS_IGNORE_BOXES= 22;
const OBJECT_CLASS_Y_FLIP = 29;
const OBJECT_CLASS_X_FLIP = 30;
const OBJECT_CLASS_PLAYER = 31;

// Object states
const OBJECT_STATE_DISABLED = 0;
const OBJECT_STATE_PICKABLE = 1;
const OBJECT_STATE_UNTOUCHABLE = 2;
const OBJECT_STATE_LOCKED = 4;
const OBJECT_STATE_08 = 8;

inline function Object_draw(var obj, var state)
{
	asm
	{
		pushWordVar .word obj
		pushWordVar .word state
		drawObject
	}
}

inline function Object_drawAt(var obj, var x, var y)
{
	asm
	{
		pushWordVar .word obj
		pushWordVar .word x
		pushByte .byte 8
		div
		pushWordVar .word y
		pushByte .byte 8
		div
		drawObjectAt
	}
}

inline function Object_drawBlast(var obj, var x, var y, var width, var height)
{
	asm
	{
		pushWordVar .word obj
		pushWordVar .word x
		pushWordVar .word y
		pushWordVar .word width
		pushWordVar .word height
		drawBlastObject
	}
}

inline function Object_find(var x, var y)
{
	var obj;
	asm
	{
		pushWordVar .word x
		pushWordVar .word y
		findObject
		writeWordVar .word obj
	}
	return obj;
}

inline function Object_findAll(var room)
{
	var array;
	asm
	{
		pushWordVar .word room
		findAllObjects
		writeWordVar .word array
	}
	return array;
}

inline function Object_getNewDir(var obj)
{
	var dir;
	asm
	{
		pushWordVar .word obj
		getObjectNewDir
		writeWordVar .word dir
	}
	return dir;
}

inline function Object_getOldDir(var obj)
{
	var dir;
	asm
	{
		pushWordVar .word obj
		getObjectOldDir
		writeWordVar .word dir
	}
	return dir;
}

inline function Object_getOwner(var obj)
{
	var owner;
	asm
	{
		pushWordVar .word obj
		getOwner
		writeWordVar .word owner
	}
	return owner;
}

inline function Object_getState(var obj)
{
	var state;
	asm
	{
		pushWordVar .word obj
		getState
		writeWordVar .word state
	}
	return state;
}

inline function Object_getX(var obj)
{
	var x;
	asm
	{
		pushWordVar .word obj
		getObjectX
		writeWordVar .word x
	}
	return x;
}

inline function Object_getY(var obj)
{
	var y;
	asm
	{
		pushWordVar .word obj
		getObjectY
		writeWordVar .word y
	}
	return y;
}


inline function Object_isClassOf(var obj, var cls)
{
	var res;
	asm
	{
		pushWordVar .word obj
		pushWordVar .word cls
		pushByte .byte 1
		ifClassOfIs
		writeWordVar .word res
	}
	return res;
}

inline function Object_load(var obj, var room)
{
	asm
	{
		pushWordVar .word obj
		pushWordVar .word room
		resourceRoutines loadObject
	}
}

inline function Object_setClass(var obj, var cls, var set)
{
	const SET_FLAG = 0x80;
	if (set)
		cls += SET;
	asm
	{
		pushWordVar .word obj
		pushWordVar .word cls
		pushByte .byte 1
		setClass
	}
	
}

inline function Object_setOwner(var obj, var owner)
{
	asm
	{
		pushWordVar .word obj
		pushWordVar .word owner
		setOwner
	}
}


inline function Object_setState(var obj, var state)
{
	asm
	{
		pushWordVar .word obj
		pushWordVar .word state
		setState
	}
}

inline function Object_stamp(var obj, var x, var y, var state)
{
	asm
	{
		pushWordVar .word obj
		pushWordVar .word x
		pushWordVar .word y
		pushWordVar .word state
		stampObject
	}
}
