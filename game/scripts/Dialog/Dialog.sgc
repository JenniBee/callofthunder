// Global constants
const VERB_DIALOG_X = 0;
const VERB_DIALOG_Y = 144;
const LINE_X = 2;
const LINE_Y = 152;
const LINE_STEP = 10;
const LINE_BORDER_Y = 150;
const N_TOPIC_LINES = 5;

// Enumerations
enum { TOPIC_PARAM_CALLBACK, TOPIC_PARAM_LINES, N_TOPIC_PARAMS };

// Dialog verbs
verb _verbDialog;
verb _verbLine1;
verb _verbLine2;
verb _verbLine3;
verb _verbLine4;
verb _verbLine5;

// Line strings
var _line1;
var _line2;
var _line3;
var _line4;
var _line5;

// Global variables
var _dialogEnabled;
var _currentDialog;
var _currentTopicIndex;
var _lineUnderMouse;
var _tmpTopic;
var _tmpLines;

// Private functions
inline function _Dialog_addLineVerb(var vrb, var index)
{
	// Add verb
	Verb_setCurrent(vrb);
	Verb_new();
	Verb_setColor(areaNormal_start);
	Verb_setBackColor(areaBack_start);
	Verb_setDimColor(areaDim_start);
	Verb_setHiColor(areaHi_start);
	Verb_setPos(LINE_X, LINE_Y + index * LINE_STEP);
}

function _Dialog_click()
{
	var selection;
	var currentLine;
	var i;

	// Check if dialog is enabled
	if (!_dialogEnabled)
		return;

	// Check selected verb
	if (_lineUnderMouse == -1)
		return;

	// Get topic, lines and callback
	_tmpTopic = _currentDialog[_currentTopicIndex];
	_tmpLines = _tmpTopic[TOPIC_PARAM_LINES];

	// Set selection
	selection = -1;
	currentLine = 0;
	for (i = 0; i < N_TOPIC_LINES; i++)
	{
		// Check if line is valid
		if (_tmpLines[i] == 0)
			continue;

		// Check if correct selection has been found
		if (currentLine == _lineUnderMouse)
		{
			selection = i;
			break;
		}

		// Increment current line
		currentLine++;
	}
	
	// Continue only if a line has been selected
	if (selection == -1)
		return;

	// Disable input
	Input_disable();

	// Hide dialog lines
	_Dialog_hideLineVerbs();

	// Display selected line
	Actor_talkEgo(_tmpLines[selection]);
	Script_waitForMessage();

	// Execute callback
	Script_startQuick(_tmpTopic[TOPIC_PARAM_CALLBACK], [selection], 1);
	while (Script_isRunning(_tmpTopic[TOPIC_PARAM_CALLBACK]))
		Script_break();

	// Redraw dialog if it hasn't been disabled
	if (_dialogEnabled)
		Dialog_show();

	// Re-enable input
	Input_enable();
}

inline function _Dialog_hideLineVerbs()
{
	// Hide verbs
	var i;
	for (i = 0; i < N_TOPIC_LINES; i++)
	{
		Verb_setCurrent(_verbLine1 + i);
		Verb_activate(0);
		Verb_draw();
	}
}

thread _Dialog_thread()
{
	var lineUnderMouse;

	while (1)
	{
		// Check if dialog is enabled first
		if (_dialogEnabled)
		{
			// Compute line under mouse
			lineUnderMouse = -1;
			if (VAR_MOUSE_Y >= LINE_BORDER_Y)
				lineUnderMouse = (VAR_MOUSE_Y - LINE_BORDER_Y) / LINE_STEP;

			// Update line under mouse
			if (_lineUnderMouse != lineUnderMouse)
			{
				// Restore original verb color
				if (_lineUnderMouse != -1)
				{
					Verb_setCurrent(_verbLine1 + _lineUnderMouse);
					Verb_setColor(areaNormal_start);
					Verb_draw();
				}

				// Update global variable
				_lineUnderMouse = lineUnderMouse;

				// Change verb color if needed
				if (_lineUnderMouse != -1)
				{
					Verb_setCurrent(_verbLine1 + _lineUnderMouse);
					Verb_setColor(areaHi_start);
					Verb_draw();
				}
			}
		}

		Script_break();
	}
}

// Public functions
inline function Dialog_addLine(var dialog, var topicIndex, var lineIndex, var string)
{
	// Get topic lines
	_tmpTopic = dialog[topicIndex];
	_tmpLines = _tmpTopic[TOPIC_PARAM_LINES];
	
	// Set line
	_tmpLines[lineIndex] = Util_copyString(string);
}

inline function Dialog_addTopic(var dialog, var topicIndex, var callback)
{
	const N_CALLBACK_PARAMS = 3;
	var topic;
	
	// Create topic and link it to the dialog instance
	topic = Util_dimArray(ARRAY_INT, N_TOPIC_PARAMS);
	topic[TOPIC_PARAM_CALLBACK] = callback;
	topic[TOPIC_PARAM_LINES] = Util_dimArray(ARRAY_INT, N_TOPIC_LINES);
	dialog[topicIndex] = topic;
}

inline function Dialog_hide()
{
	var i;

	// Hide dialog background
	Verb_setCurrent(_verbDialog);
	Verb_activate(0);
	Verb_draw();

	// Hide dialog lines
	_Dialog_hideLineVerbs();

	// Disable dialog
	_dialogEnabled = 0;

	// Enable and show sentence and inventory
	Inventory_enable();
	Sentence_enable();
	Inventory_show();
	Sentence_show();
}

function Dialog_init()
{
	var i;

	// Setup charset
	Interface_setCharset(font1);
	Interface_printTextLoadDefault();
	Interface_printTextLeft();
	Interface_printTextColor(areaHi_start);
	Interface_printTextSaveDefault();

	// Create dialog background
	Verb_setCurrent(_verbDialog);
	Verb_new();
	Verb_setImage(objDialog);
	Verb_setPos(VERB_DIALOG_X, VERB_DIALOG_Y);

	// Setup line verbs
	for (i = 0; i < N_TOPIC_LINES; i++)
		_Dialog_addLineVerb(_verbLine1 + i, i);

	// Dialog is disabled by default
	_dialogEnabled = 0;

	// Initialize line under mouse
	_lineUnderMouse = -1;

	// Register our click handler
	Input_registerClickHandler(_Dialog_click);

	// Launch thread
	_Dialog_thread();
}

inline function Dialog_new(var nTopics)
{
	var dialog;
	dialog = Util_dimArray(ARRAY_INT, nTopics);
	return dialog;
}

inline function Dialog_removeLine(var dialog, var topicIndex, var lineIndex)
{
	// Get topic lines
	_tmpTopic = dialog[topicIndex];
	_tmpLines = _tmpTopic[TOPIC_PARAM_LINES];

	// Delete line
	Util_nukeArray(_tmpLines[lineIndex]);
	_tmpLines[lineIndex] = 0;
}

inline function Dialog_setTopic(var dialog, var topicIndex)
{
	// Set current dialog and topic
	_currentDialog = dialog;
	_currentTopicIndex = topicIndex;
}

inline function Dialog_show()
{
	var t;
	var lines;
	var currentLine;
	var i;

	// Hide and disable sentence and inventory
	Inventory_hide();
	Sentence_hide();
	Inventory_disable();
	Sentence_disable();

	// Hide dialog lines first
	_Dialog_hideLineVerbs();

	// Draw dialog background
	Verb_setCurrent(_verbDialog);
	Verb_activate(1);
	Verb_draw();
	
	// Get topic lines
	t = _currentDialog[_currentTopicIndex];
	lines = t[TOPIC_PARAM_LINES];

	// Draw dialog lines
	currentLine = 0;
	for (i = 0; i < N_TOPIC_LINES; i++)
	{
		// Check if line is valid
		if (lines[i] == 0)
			continue;

		// Set current verb
		Verb_setCurrent(_verbLine1 + currentLine);

		// Update line string
		switch (currentLine)
		{
			case 0:
				_line1 = lines[i];
				Verb_setNameString("\x05%s{_line1}");
				break;
			case 1:
				_line2 = lines[i];
				Verb_setNameString("\x05%s{_line2}");
				break;
			case 2:
				_line3 = lines[i];
				Verb_setNameString("\x05%s{_line3}");
				break;
			case 3:
				_line4 = lines[i];
				Verb_setNameString("\x05%s{_line4}");
				break;
			case 4:
				_line5 = lines[i];
				Verb_setNameString("\x05%s{_line5}");
				break;
		}

		// Draw verb
		Verb_activate(1);
		Verb_draw();

		// Update current line
		currentLine++;
	}

	// Enable dialog
	_dialogEnabled = 1;
}
