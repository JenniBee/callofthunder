// Global constants
const COLOR_VERB_BACK = 249;
const COLOR_VERB_DIM = 250;
const COLOR_VERB_NORMAL = 251;
const COLOR_VERB_HI = 252;
const INVENTORY_Y = 144;

// Verbs
verb verbVerbs;
verb verbArrowUp;
verb verbArrowDown;

// Global variables
var _inventoryVisible;

// Private functions
function _Inventory_addSlot(var vrb, var posX, var posY)
{
	// Add inventory slot verb
	Verb_setCurrent(vrb);
	Verb_new();
	Verb_setPos(posX, posY);
}

inline function _Inventory_addVerb(var vrb, var string, var posX, var posY)
{
	// Add verb
	Verb_setCurrent(vrb);
	Verb_new();
	Verb_setNameString(string);
	Verb_setColor(COLOR_VERB_NORMAL);
	Verb_setBackColor(COLOR_VERB_BACK);
	Verb_setDimColor(COLOR_VERB_DIM);
	Verb_setHiColor(COLOR_VERB_HI);
	Verb_setPos(posX, posY);
}

// Public functions
inline function Inventory_checkArrows(var vrb)
{
	// Check arrows
	if (vrb == verbArrowUp || vrb == verbArrowDown)
	{
		// TODO: update inventory display
		Util_printDebug("An arrow has been clicked.");
		return 1;
	}

	return 0;
}

inline function Inventory_getObject(var owner, var x, var y)
{
	var vrb;
	vrb = Verb_getFromXY(x, y);

	// If the verb is not an inventory object, we consider no verb has been found
	if ((vrb < verbInvSlot1) || (vrb > verbInvSlot10))
		return 0;

	// TODO: add offset
	return Object_findInventory(owner, vrb - verbInvSlot1 + 1);
}

function Inventory_hide()
{
	Room_setScreen(0, INVENTORY_Y - 1);
	Util_redraw();

	// Draw verbs background
	Verb_setCurrent(verbVerbs);
	Verb_activate(0);
	Verb_draw();

	// Draw verbs
	Verb_setCurrent(verbGive);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbPickUp);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbUse);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbOpen);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbTalkTo);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbPush);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbClose);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbLookAt);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbPull);
	Verb_activate(0);
	Verb_draw();
	
	// Draw arrows
	Verb_setCurrent(verbArrowUp);
	Verb_activate(0);
	Verb_draw();
	Verb_setCurrent(verbArrowDown);
	Verb_activate(0);
	Verb_draw();

	// Draw inventory
	Verb_setCurrent(verbInvSlot1);
	Verb_activate(0);
	Verb_draw();

	// Draw sentence
	Sentence_hide();

	// Change the visible state
	_inventoryVisible = 0;
}

function Inventory_init()
{
	const VERB_VERBS_X = 0;
	const VERB_VERBS_Y = 152;
	const VERB_GIVE_X = 15;
	const VERB_GIVE_Y = 159;
	const VERB_PICK_UP_X = 54;
	const VERB_PICK_UP_Y = 159;
	const VERB_USE_X = 108;
	const VERB_USE_Y = 159;
	const VERB_OPEN_X = 14;
	const VERB_OPEN_Y = 173;
	const VERB_TALK_TO_X = 53;
	const VERB_TALK_TO_Y = 173;
	const VERB_PUSH_X = 106;
	const VERB_PUSH_Y = 173;
	const VERB_CLOSE_X = 12;
	const VERB_CLOSE_Y = 187;
	const VERB_LOOK_AT_X = 53;
	const VERB_LOOK_AT_Y = 187;
	const VERB_PULL_X = 108;
	const VERB_PULL_Y = 187;
	const VERB_ARROW_UP_X = 147;
	const VERB_ARROW_UP_Y = 158;
	const VERB_ARROW_DOWN_X = 147;
	const VERB_ARROW_DOWN_Y = 180;
	const VERB_INV_SLOT1_X = 160;
	const VERB_INV_SLOT1_Y = 152;

	// Initialize charset
	Interface_setCharset(font1);
	Interface_printTextLoadDefault();
	Interface_printTextLeft();
	Interface_printTextSaveDefault();

	// Add verbs background
	Verb_setCurrent(verbVerbs);
	Verb_new();
	Verb_setImageInRoom(verbsObject, 1);
	Verb_setPos(VERB_VERBS_X, VERB_VERBS_Y);

	// Add verbs
	_Inventory_addVerb(verbGive, "Give", VERB_GIVE_X, VERB_GIVE_Y);
	_Inventory_addVerb(verbPickUp, "Pick up", VERB_PICK_UP_X, VERB_PICK_UP_Y);
	_Inventory_addVerb(verbUse, "Use", VERB_USE_X, VERB_USE_Y);
	_Inventory_addVerb(verbOpen, "Open", VERB_OPEN_X, VERB_OPEN_Y);
	_Inventory_addVerb(verbTalkTo, "Talk to", VERB_TALK_TO_X, VERB_TALK_TO_Y);
	_Inventory_addVerb(verbPush, "Push", VERB_PUSH_X, VERB_PUSH_Y);
	_Inventory_addVerb(verbClose, "Close", VERB_CLOSE_X, VERB_CLOSE_Y);
	_Inventory_addVerb(verbLookAt, "Look at", VERB_LOOK_AT_X, VERB_LOOK_AT_Y);
	_Inventory_addVerb(verbPull, "Pull", VERB_PULL_X, VERB_PULL_Y);

	// Add arrows
	_Inventory_addVerb(verbArrowUp, "\x01", VERB_ARROW_UP_X, VERB_ARROW_UP_Y);
	_Inventory_addVerb(verbArrowDown, "\x02", VERB_ARROW_DOWN_X, VERB_ARROW_DOWN_Y);

	// Add inventory slots
	_Inventory_addSlot(verbInvSlot1, VERB_INV_SLOT1_X, VERB_INV_SLOT1_Y);

	// Inventory is invisible by default
	_inventoryVisible = 0;
}

function Inventory_show()
{
	Room_setScreen(0, INVENTORY_Y - 1);
	Util_redraw();

	// Draw verbs background
	Verb_setCurrent(verbVerbs);
	Verb_activate(1);
	Verb_draw();

	// Draw verbs
	Verb_setCurrent(verbGive);
	Verb_activate(1);
	Verb_draw();
	Verb_setCurrent(verbPickUp);
	Verb_activate(1);
	Verb_draw();
	Verb_setCurrent(verbUse);
	Verb_activate(1);
	Verb_draw();
	Verb_setCurrent(verbOpen);
	Verb_activate(1);
	Verb_draw();
	Verb_setCurrent(verbTalkTo);
	Verb_activate(1);
	Verb_draw();
	Verb_setCurrent(verbPush);
	Verb_activate(1);
	Verb_draw();
	Verb_setCurrent(verbClose);
	Verb_activate(1);
	Verb_draw();
	Verb_setCurrent(verbLookAt);
	Verb_activate(1);
	Verb_draw();
	Verb_setCurrent(verbPull);
	Verb_activate(1);
	Verb_draw();
	
	// Draw arrows
	Verb_setCurrent(verbArrowUp);
	Verb_dim();
	Verb_draw();
	Verb_setCurrent(verbArrowDown);
	Verb_dim();
	Verb_draw();

	// Draw inventory
	Verb_setCurrent(verbInvSlot1);
	Verb_activate(1);
	Verb_setImageInRoom(whipInvObject, 1);
	Verb_draw();

	// Draw sentence
	Sentence_show();

	// Change the visible state
	_inventoryVisible = 1;
}
